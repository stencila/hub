variables:
  - name: PYTHON_VERSION
    value: '3.9'
  - name: NODE_VERSION
    value: '14.x'

pool:
  vmImage: ubuntu-20.04

jobs:
  - job: test
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: $(PYTHON_VERSION)
        displayName: Use Python $(PYTHON_VERSION)

      - task: NodeTool@0
        inputs:
          versionSpec: $(NODE_VERSION)
        displayName: Use Node.js $(NODE_VERSION)

      - script: make lint
        displayName: Run linting

      - script: make cover
        displayName: Run unit tests

      - script: bash <(curl -s https://codecov.io/bash)
        condition: succeeded()
        displayName: Upload coverage

      - script: make smoke
        displayName: Run smoke tests

  - job: release
    dependsOn: [test]
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: $(PYTHON_VERSION)
        displayName: Use Python $(PYTHON_VERSION)

      - task: NodeTool@0
        inputs:
          versionSpec: $(NODE_VERSION)
        displayName: Use Node.js $(NODE_VERSION)

      - task: Docker@2
        inputs:
          command: login
          containerRegistry: DockerHub
        displayName: Login to container registry (for publishing Docker images)

      - task: TwineAuthenticate@1
        inputs:
          pythonUploadServiceConnection: PyPI
        displayName: Authenticate with Twine (for publishing Python client)

      - script: |
          npm install
          make -C manager venv
          npx semantic-release
        env:
          GIT_AUTHOR_NAME: Stencila CI Bot
          GIT_AUTHOR_EMAIL: ci@stenci.la
          GIT_COMMITTER_NAME: Stencila CI Bot
          GIT_COMMITTER_EMAIL: ci@stenci.la
          GITHUB_TOKEN: $(GITHUB_TOKEN)
          NPM_TOKEN: $(NPM_TOKEN)
        displayName: Tag and release

      - script: |
          set -e
          make -C manager create-devdb-sqlite static
          make -C manager run &
          make -C manager snaps
          kill %1
          mkdir -p pages/manager/snaps
          mv manager/snaps/* pages/manager/snaps
          npx gh-pages --repo https://$(GITHUB_TOKEN)@github.com/stencila/hub.git -f -d pages
        env:
          GIT_AUTHOR_NAME: Stencila CI Bot
          GIT_AUTHOR_EMAIL: ci@stenci.la
          GIT_COMMITTER_NAME: Stencila CI Bot
          GIT_COMMITTER_EMAIL: ci@stenci.la
        displayName: Publish docs
        # Temporarily skipping this as often timing out / hanging when taking snaps
        condition: false
